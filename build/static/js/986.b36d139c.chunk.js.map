{"version":3,"file":"static/js/986.b36d139c.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/CalendarOutlined.js","../node_modules/@ant-design/icons/es/icons/CalendarOutlined.js","Container/Auth/Planner/Child/PlannerActionLeft.js","Components/Utils/TimeInterval.js","Container/Auth/Planner/Child/PlannerActionRight.js","Container/Auth/Planner/Child/PlannerHeader.js","Container/Auth/Planner/PlannerTable.js","Container/Auth/Planner/Planner.js","Container/Auth/Planner/PlannerAction.js","../node_modules/@ant-design/icons-svg/es/asn/TableOutlined.js","../node_modules/@ant-design/icons/es/icons/TableOutlined.js"],"sourcesContent":["// This icon file is generated automatically.\nvar CalendarOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 184H712v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H384v-64c0-4.4-3.6-8-8-8h-56c-4.4 0-8 3.6-8 8v64H144c-17.7 0-32 14.3-32 32v664c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V216c0-17.7-14.3-32-32-32zm-40 656H184V460h656v380zM184 392V256h128v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h256v48c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8v-48h128v136H184z\" } }] }, \"name\": \"calendar\", \"theme\": \"outlined\" };\nexport default CalendarOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CalendarOutlinedSvg from \"@ant-design/icons-svg/es/asn/CalendarOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CalendarOutlined = function CalendarOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CalendarOutlinedSvg\n  }));\n};\nCalendarOutlined.displayName = 'CalendarOutlined';\nexport default /*#__PURE__*/React.forwardRef(CalendarOutlined);","import React from 'react'\r\nimport { ActionIcon } from \"../../../../Components/Utils\";\r\nimport { FlexContainer } from '../../../../Components/UI/Layout'\r\n\r\nimport { CalendarOutlined ,TableOutlined} from '@ant-design/icons';\r\n\r\n// import { FormattedMessage } from \"react-intl\";\r\n// import PlannerShareForm from \"./PlannerShareForm\"\r\nconst PlannerActionLeft = (props) => {\r\n    return (\r\n        <>\r\n        <FlexContainer alignItems='center'>\r\n            <CalendarOutlined \r\n             onClick={() => props.setPlannerViewType(\"dashboard\")}\r\n             style={{\r\n                marginRight: \"0.5rem\",\r\n                color: props.viewType === \"dashboard\" && \"#1890ff\",\r\n                fontSize: \"1.0625em\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            />\r\n           \r\n        \r\n        \r\n        \r\n            <TableOutlined \r\n               onClick={() => props.setPlannerViewType(\"table\")}\r\n               style={{\r\n                  marginRight: \"0.5rem\",\r\n                  color: props.viewType === \"table\" && \"#1890ff\",\r\n                  fontSize: \"1.0625em\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n            />\r\n           \r\n        </FlexContainer>\r\n       \r\n   \r\n    </>\r\n    )\r\n}\r\n\r\nexport default PlannerActionLeft ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n//import { renderTooltip } from \"../Helpers/Function/UIFunctions\";\r\n\r\nconst StyledTimeinterval = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\nconst StyledSpan = styled.span`\r\n  font-size: 1em;\r\n  color: ${(props) => (props.isSelected ? \"#1890ff\" : props.theme.color)};\r\n  margin: 0.2rem 0.3rem;\r\n  font-weight: 600;\r\n  opacity: ${(props) => (props.disabled ? 0.3 : 1)}\r\n  cursor:  ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\r\n  /* & :: after {\r\n    content: \" | \";\r\n  } */\r\n`;\r\nclass TimeInterval extends Component {\r\n  render() {\r\n    const { times, handleClick, subscriptionType } = this.props;\r\n    console.log(times);\r\n    return (\r\n      <StyledTimeinterval>\r\n        {/* <h1> Hiring Stats</h1> */}\r\n        {times &&\r\n          times.length &&\r\n          times\r\n            // .filter(time => time.starter || subscriptionType === \"PROFESSIONAL\")\r\n            .map((time, i) => {\r\n              //////////debugger;\r\n\r\n              //////////debugger;\r\n              return (\r\n                <StyledSpan\r\n                  key={i}\r\n                  isSelected={time.isSelected}\r\n                  onClick={() => handleClick(time)}\r\n                >\r\n                  {time.value}\r\n                </StyledSpan>\r\n              );\r\n            })}\r\n            \r\n      </StyledTimeinterval>\r\n    );\r\n  }\r\n}\r\n\r\nTimeInterval.propTypes = {\r\n  times: PropTypes.array,\r\n};\r\nconst mapStateToProps = ({ auth }) => ({});\r\nexport default connect(mapStateToProps)(TimeInterval);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Popover, Select, Button, Switch } from \"antd\";\r\n// import Button from \"antd/lib/button\";\r\nimport Icon from \"antd/lib/icon\";\r\nimport TimeInterval from \"../../../../Components/Utils/TimeInterval\";\r\nimport { FlexContainer } from \"../../../../Components/UI/Layout\";\r\nimport { TextInput } from \"../../../../Components/UI/Elements\";\r\n//import PlannerSharedForm from \"./PlannerSharedForm\";\r\nimport { StyledSelect ,StyledRangePicker} from \"../../../../Components/UI/Antd\";\r\n\r\n\r\nimport {\r\n  setSelectedTimeIntervalReport,\r\n  setTimeRangeReport,\r\n \r\n\r\n} from \"../PlannerAction\";\r\n\r\n\r\nconst Option = StyledSelect.Option;\r\n\r\nconst PlannerActionRight = (props) => {\r\n  return (\r\n    <FlexContainer alignItems=\"center\">\r\n        <TimeInterval\r\n         times={props.dateRangeList}\r\n          handleClick={props.setSelectedTimeIntervalReport}\r\n        />\r\n        {/* <Popover>\r\n          <StyledRangePicker\r\n            style={{width:\"35%\"}}\r\n            onChange={(range) => {\r\n              props.setTimeRangeReport(range[0], range[1]);\r\n              console.log(range);\r\n            }}\r\n\r\n          />\r\n        </Popover> */}\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ planner }) => ({\r\n  // userType: auth.userDetails && auth.userDetails.userType,\r\n//   userType: auth.userDetails,\r\n\r\ndateRangeList: planner.dateRangeList,\r\n\r\n\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n  setSelectedTimeIntervalReport,\r\n  setTimeRangeReport\r\n}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlannerActionRight);\r\n","import React, { Component } from 'react'\r\nimport { ActionHeader } from '../../../../Components/Utils';\r\nimport PlannerActionLeft from \"./PlannerActionLeft\";\r\nimport PlannerActionRight from './PlannerActionRight';\r\nclass PlannerHeader extends Component {\r\n    render() {\r\n        const { viewType, setPlannerViewType } = this.props;\r\n        return (\r\n            <div>\r\n                <ActionHeader\r\n                    leftComponent={<PlannerActionLeft\r\n                         viewType={viewType}\r\n                        setPlannerViewType={setPlannerViewType}\r\n                    />}\r\n                    rightComponent={<PlannerActionRight\r\n                    />}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlannerHeader;","import React, { useEffect, useState, useMemo, lazy ,Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { bindActionCreators } from \"redux\";\r\nimport moment from \"moment\";\r\n\r\nimport { StyledTable } from \"../../../Components/UI/Antd\";\r\nimport {getDateWiseList,} from \"../Planner/PlannerAction\";\r\n\r\n\r\n\r\nclass PlannerTable extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        var today = new Date(),\r\n        date =\r\n          today.getFullYear() +\r\n          \"-\" +\r\n          (today.getMonth() + 1) +\r\n          \"-\" +\r\n          today.getDate();\r\n    \r\n      this.state = {\r\n        date: date,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n       const { getDateWiseList, candidateId, startDate, endDate } = this.props;\r\n       getDateWiseList(candidateId,  startDate, endDate);\r\n      \r\n     }\r\n\r\n\r\n     componentWillReceiveProps(nextProps) {\r\n        if (\r\n          this.props.startDate !== nextProps.startDate ||\r\n          this.props.endDate !== nextProps.endDate\r\n        ) {\r\n             \r\n          const { getDateWiseList, candidateId, startDate, endDate } = nextProps;\r\n          getDateWiseList(candidateId, startDate, endDate);\r\n             \r\n        }\r\n      }\r\n  \r\n\r\n\r\n//   const {\r\n//     fetchingCustomers,\r\n//     customerByUserId,\r\n//     handleUpdateCustomerModal,\r\n//     updateCustomerModal,\r\n//     fetchingCustomersError,\r\n//     fetchingAllCustomers,\r\n//     user,\r\n//     IconShowhover,\r\n//   } = props;\r\n  // if (fetchingCustomers) {\r\n  //   return <BundleLoader />;\r\n  // }\r\n  render() {\r\n    \r\n  const columns = [\r\n  \r\n\r\n    {\r\n        title:\"Project\",\r\n        width: \"15%\",\r\n        dataIndex: \"projectName\",\r\n      },\r\n\r\n      {\r\n        title:\"Hours\",\r\n        width: \"15%\",\r\n        dataIndex: \"hour\",\r\n      },\r\n\r\n      {\r\n        title:\"Date\",\r\n        width: \"15%\",\r\n        dataIndex: \"startDate\",\r\n        render: (text, item) => {\r\n         // const availableDate = moment(item.startDate).format(\"ll\");\r\n          return (\r\n            <>\r\n              {item.startDate === null ? (\r\n                \"No Data\"\r\n              ) : (\r\n                <span>{moment(item.startDate).format(\"l\")}</span>\r\n              )}\r\n            </>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title:\"Billing Rate\",\r\n        width: \"15%\", \r\n        dataIndex: \"billingAmount\",\r\n      },\r\n      {\r\n        title:\"Billed\",\r\n        width: \"15%\",\r\n        dataIndex: \"finalBillableAmount\",\r\n      },\r\n   \r\n    \r\n   \r\n  \r\n\r\n   \r\n   \r\n \r\n   \r\n\r\n\r\n  ];\r\n    \r\n//   if (fetchingCustomersError) {\r\n//     return <APIFailed />;\r\n//   }\r\n  const tab = document.querySelector(\".ant-layout-sider-children\");\r\n  const tableHeight = tab && tab.offsetHeight * 0.75;\r\n  return (\r\n    <>\r\n  \r\n        \r\n      <StyledTable\r\n        // rowKey=\"accountId\"\r\n        // rowSelection={rowSelection}\r\n       // rowKey={(record) => record.customerId}\r\n        columns={columns}\r\n        dataSource={this.props.showDatelist}\r\n       // loading={fetchingCustomers || fetchingCustomersError || fetchingAllCustomers}\r\n        // scroll={{ y: 500 }}\r\n        // pagination={false\r\n        //scroll={{ y: tableHeight }}\r\n\r\n        pagination={false}\r\n      \r\n\r\n      />\r\n     \r\n         \r\n\r\n    \r\n     \r\n    </>\r\n  );\r\n    \r\n  \r\n}\r\n}\r\nconst mapStateToProps = ({ auth, customer,planner, sector, opportunity,employee }) => ({\r\n    candidateId:auth.userDetails.candidateId,\r\n    endDate: planner.endDate,\r\n    startDate: planner.startDate,\r\n    showDatelist:planner.showDatelist\r\n});\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n        getDateWiseList\r\n    },\r\n    dispatch\r\n  );\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlannerTable);\r\n","import React, { Component, Suspense, lazy, useState } from \"react\";\r\nimport { StyledModal } from \"../../../Components/UI/Antd\";\r\nimport PlannerHeader from \"./Child/PlannerHeader\";\r\n// import TimeZoneForm from \"./TimeZoneForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport PlannerTable from \"../Planner/PlannerTable\"\r\nimport { setPlannerViewType } from \"./PlannerAction\";\r\nimport { BundleLoader } from \"../../../Components/Placeholder\";\r\nimport { set } from \"lodash\";\r\n\r\nconst PlannerCalendar = lazy(() =>\r\n  import(\"./Child/PlannerCalendar\")\r\n);\r\n\r\nfunction Planner(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [currentUser,setCurrentUser] = useState(\"\");\r\n\r\n  function handleUserData(data){\r\nsetCurrentUser(data)\r\n  }\r\n\r\n  function showModal() {\r\n    setVisible(true);\r\n  }\r\n\r\n  function handleOk(e) {\r\n    setVisible(false);\r\n  }\r\n\r\n  function handleCancel(e) {\r\n    setVisible(false);\r\n  }\r\n  function handleCallback() {\r\n    setVisible(false);\r\n  }\r\n  const {\r\n    setPlannerViewType,\r\n    viewType,\r\n  } = props;\r\n  return (\r\n    <React.Fragment>\r\n      {/* {!props.timeZone && ( */}\r\n        {/* <StyledModal\r\n          width={\"30vw\"}\r\n          bodyPadding={\"0em\"}\r\n          title={null}\r\n          visible={true}\r\n          onOk={handleOk}\r\n          footer={null}\r\n          onCancel={handleCancel}\r\n          maskClosable={false}\r\n        >\r\n          <TimeZoneForm callback={handleCallback} />\r\n        </StyledModal> */}\r\n      {/* )} */}\r\n      <PlannerHeader\r\n        setPlannerViewType={setPlannerViewType}\r\n        viewType={viewType}\r\n        // currentUser={currentUser}\r\n        // handleUserData={handleUserData}\r\n      />\r\n        <Suspense fallback={<BundleLoader />}>\r\n          {props.viewType === \"dashboard\" ? \r\n           <PlannerCalendar /> :\r\n            props.viewType === \"table\" ? \r\n            <PlannerTable/>:\r\n            null}\r\n            \r\n\r\n        </Suspense>\r\n       \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ auth,planner }) => ({\r\n//   timeZone: auth.userDetails && auth.userDetails.timeZone,\r\n  viewType: planner.viewType,\r\n\r\n});\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n   setPlannerViewType,\r\n}, dispatch);\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Planner);\r\n","import * as types from \"./PlannerActionTypes\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { base_url } from \"../../../Config/Auth\";\r\n\r\n\r\nexport const setPlannerViewType = (viewType) => (dispatch) =>\r\n  dispatch({ type: types.SET_PLANNER_VIEW_TYPE, payload: viewType });\r\n\r\n// /**\r\n//  * set planner startDate and endDate on drag of calendar\r\n//  */\r\nexport const setPlannerDate = (date) => (dispatch) => {\r\n  const formattedDate = {\r\n    startDate: moment(date.start, \"YYYY-MM-DD\"),\r\n    endDate: moment(date.end, \"YYYY-MM-DD\"),\r\n    startTime: moment(date.start, \"HH:mm:ss\"),\r\n    endTime: moment(date.end, \"HH:mm:ss\"),\r\n  };\r\n  console.log(\"*******)()()()(\", formattedDate);\r\n  dispatch({\r\n    type: types.SET_PLANNER_DATE,\r\n    payload: formattedDate,\r\n  });\r\n};\r\n\r\n\r\nexport const setTimeRangeReport = (startDate, endDate) => (dispatch) => {\r\n  dispatch({\r\n    type: types.SET_TIME_INTERVAL_REPORT,\r\n    payload: {\r\n      startDate: moment(startDate).toISOString(),\r\n      endDate: moment(endDate).toISOString(),\r\n    },\r\n  });\r\n};\r\n\r\n\r\nexport const setSelectedTimeIntervalReport = (selectedTime) => (dispatch) => {\r\n  console.log(selectedTime);\r\n  dispatch({\r\n    type: types.CHANGE_SELECTED_TIME_INTERVAL_REPORT,\r\n    payload: selectedTime,\r\n  });\r\n};\r\n\r\n// /**\r\n//  * set startDate/endDate and startTime/endTime\r\n//  */\r\n// export const setDateTime = (dateTime) => (dispatch) => {\r\n//   dispatch({\r\n//     type: types.SET_DATE_AND_TIME,\r\n//     payload: dateTime,\r\n//   });\r\n// };\r\n/**\r\n *handle which of one (call, event, task ) form modal to show on calendar drag\r\n */\r\nexport const handleChooserModal = (modalForm) => (dispatch) => {\r\n  dispatch({\r\n    type: types.HANDLE_CHOOSER_MODAL,\r\n    payload: modalForm,\r\n  });\r\n};\r\n/**\r\n *handle the modal open close when a calender event is selected\r\n */\r\n// export const handleViewEditModal = (modalProps) => (dispatch) => {\r\n//   dispatch({\r\n//     type: types.HANDLE_VIEW_EDIT_MODAL,\r\n//     payload: modalProps,\r\n//   });\r\n// };\r\n// /**\r\n//  *show modal to choose which modal to open(call, event , task)\r\n//  */\r\n// export const setFormModalType = (type) => (dispatch) => {\r\n//   dispatch({\r\n//     type: types.SET_FORM_MODAL_TYPE,\r\n//     payload: type,\r\n//   });\r\n// };\r\n\r\n// // export const getsharePlannerUsers = (cb) => (dispatch, getState) => {\r\n// //   const { employeeId } = getState(\"auth\").auth.employeeDetails;\r\n// //   dispatch({\r\n// //     type: types.GET_PLANNER_USERS_REQUEST,\r\n// //   });\r\n\r\n// //   axios\r\n// //     .get(`${base_url}/partner/ShareUsers`, {\r\n// //       headers: {\r\n// //         Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n// //       },\r\n// //     })\r\n// //     .then((res) => {\r\n// //       console.log(res);\r\n// //       dispatch({\r\n// //         type: types.GET_PLANNER_USERS_SUCCESS,\r\n// //         payload: res.data,\r\n// //       });\r\n// //       cb && cb(\"success\");\r\n// //     })\r\n// //     .catch((err) => {\r\n// //       console.log(err);\r\n// //       dispatch({\r\n// //         type: types.GET_PLANNER_USERS_FAILURE,\r\n// //         payload: err,\r\n// //       });\r\n// //       cb && cb(\"failure\");\r\n// //     });\r\n// // };\r\n\r\n// export const getPlannerPermissionsList = () => (dispath) => {\r\n//   dispath({ type: types.GET_PERMISSIONS_LIST_REQUEST });\r\n//   axios\r\n//     .get(`${base_url}/permission/type?type=${\"planner\"}`, {\r\n//       headers: {\r\n//         Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n//       },\r\n//     })\r\n//     .then((res) => {\r\n//       dispath({\r\n//         type: types.GET_PERMISSIONS_LIST_SUCCESS,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispath({\r\n//         type: types.GET_PERMISSIONS_LIST_FAILURE,\r\n//         payload: err,\r\n//       });\r\n//     });\r\n// };\r\n\r\n// export const sharePlannerPermission = (data, userId) => (\r\n//   dispatch,\r\n//   getState\r\n// ) => {\r\n//   // const { userId } = getState(\"auth\").auth.userDetails;\r\n//   dispatch({\r\n//     type: types.SHARE_PLANNER_PERMISSION_REQUEST,\r\n//   });\r\n\r\n//   axios\r\n//     .post(`${base_url}/permission/details`, data, {\r\n//       headers: {\r\n//         Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n//       },\r\n//     })\r\n//     .then((res) => {\r\n//       // console.log(res);\r\n//       // dispatch(getOpportunityListByUserId(userId));\r\n//       // dispatch(getRecords(userId));\r\n//       dispatch({\r\n//         type: types.SHARE_PLANNER_PERMISSION_SUCCESS,\r\n//         payload: res.data,\r\n//       });\r\n//       //  cb && cb(\"success\");\r\n//     })\r\n//     .catch((err) => {\r\n//       console.log(err);\r\n//       dispatch({\r\n//         type: types.SHARE_PLANNER_PERMISSION_FAILURE,\r\n//         payload: err,\r\n//       });\r\n//       //  cb && cb(\"failure\");\r\n//     });\r\n// };\r\n\r\n\r\nexport const getCandidateProject = (candidateId) => (dispatch) => {\r\n  dispatch({\r\n    type: types.GET_CANDIDATE_PROJECT_REQUEST,\r\n  });\r\n  axios\r\n  .get(`${base_url}/recriutment/web/project-name/${candidateId}?url=dtoc.tekorero.com`, {\r\n    // headers: {\r\n    //   Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n    // },\r\n  })\r\n    \r\n    .then((res) => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: types.GET_CANDIDATE_PROJECT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: types.GET_CANDIDATE_PROJECT_FAILURE,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n\r\nexport const addHour = (opportunity, cb) => (dispatch, getState) => {\r\n  const userId = getState().auth.userDetails.userId;\r\n  dispatch({\r\n    type: types.ADD_PLANNER_HOUR_REQUEST,\r\n  });\r\n  axios\r\n    .post(`${base_url}/hour/save/website?url=dtoc.tekorero.com`, opportunity, {\r\n      // headers: {\r\n      //   Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n      // },\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n\r\n      dispatch({\r\n        type: types.ADD_PLANNER_HOUR_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n      cb();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: types.ADD_PLANNER_HOUR_FAILURE,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport const getDateWiseList = (candidateId,endDate,startDate,) => (dispatch) => {\r\n  dispatch({\r\n    type: types.GET_DATE_WISE_REPORT_REQUEST,\r\n  });\r\n  axios\r\n    .get(`${base_url}/hour/user/table/website/${candidateId}?endDate=${endDate}&startDate=${startDate}&url=dtoc.tekorero.com`, {\r\n    //  headers: {\r\n    //     Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") || \"\",\r\n    //   },\r\n    })\r\n    .then((res) => {\r\n      dispatch({\r\n        type: types.GET_DATE_WISE_REPORT_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: types.GET_DATE_WISE_REPORT_FAILURE,\r\n      });\r\n    });\r\n};\r\n","// This icon file is generated automatically.\nvar TableOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 208H676V232h212v136zm0 224H676V432h212v160zM412 432h200v160H412V432zm200-64H412V232h200v136zm-476 64h212v160H136V432zm0-200h212v136H136V232zm0 424h212v136H136V656zm276 0h200v136H412V656zm476 136H676V656h212v136z\" } }] }, \"name\": \"table\", \"theme\": \"outlined\" };\nexport default TableOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TableOutlinedSvg from \"@ant-design/icons-svg/es/asn/TableOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar TableOutlined = function TableOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TableOutlinedSvg\n  }));\n};\nTableOutlined.displayName = 'TableOutlined';\nexport default /*#__PURE__*/React.forwardRef(TableOutlined);"],"names":["CalendarOutlined","props","ref","React","AntdIcon","_objectSpread","icon","CalendarOutlinedSvg","displayName","alignItems","onClick","setPlannerViewType","style","marginRight","color","viewType","fontSize","cursor","TableOutlined","StyledTimeinterval","styled","StyledSpan","isSelected","theme","disabled","TimeInterval","this","times","handleClick","subscriptionType","console","log","length","map","time","i","value","Component","connect","auth","StyledSelect","dateRangeList","planner","dispatch","bindActionCreators","setSelectedTimeIntervalReport","setTimeRangeReport","PlannerHeader","leftComponent","rightComponent","PlannerTable","today","Date","date","getFullYear","getMonth","getDate","state","getDateWiseList","candidateId","startDate","endDate","nextProps","columns","title","width","dataIndex","render","text","item","moment","format","tab","document","querySelector","offsetHeight","dataSource","showDatelist","pagination","customer","sector","opportunity","employee","userDetails","PlannerCalendar","lazy","useState","Suspense","fallback","type","types","payload","setPlannerDate","formattedDate","start","end","startTime","endTime","toISOString","selectedTime","handleChooserModal","modalForm","getCandidateProject","axios","base_url","then","res","data","catch","err","addHour","cb","getState","userId","TableOutlinedSvg"],"sourceRoot":""}